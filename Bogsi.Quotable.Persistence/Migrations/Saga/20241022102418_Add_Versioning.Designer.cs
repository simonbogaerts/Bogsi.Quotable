// <auto-generated />
using System;
using Bogsi.Quotable.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Bogsi.Quotable.Persistence.Migrations.Saga
{
    [DbContext(typeof(SagaContext))]
    [Migration("20241022102418_Add_Versioning")]
    partial class Add_Versioning
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Saga")
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Bogsi.Quotable.Application.Sagas.CreateQuoteSagaData", b =>
                {
                    b.Property<Guid>("CorrelationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("CacheCreated")
                        .HasColumnType("boolean");

                    b.Property<string>("CurrentState")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PublicId")
                        .HasColumnType("uuid");

                    b.Property<bool>("QuoteCreated")
                        .HasColumnType("boolean");

                    b.Property<uint>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.Property<bool>("SagaFailed")
                        .HasColumnType("boolean");

                    b.Property<bool>("SagaFinalized")
                        .HasColumnType("boolean");

                    b.HasKey("CorrelationId");

                    b.ToTable("CreateQuoteSagaData", "Saga");
                });

            modelBuilder.Entity("Bogsi.Quotable.Application.Sagas.DeleteQuoteSagaData", b =>
                {
                    b.Property<Guid>("CorrelationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("CacheCleaned")
                        .HasColumnType("boolean");

                    b.Property<string>("CurrentState")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PublicId")
                        .HasColumnType("uuid");

                    b.Property<bool>("QuoteDeleted")
                        .HasColumnType("boolean");

                    b.Property<uint>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.Property<bool>("SagaFailed")
                        .HasColumnType("boolean");

                    b.Property<bool>("SagaFinalized")
                        .HasColumnType("boolean");

                    b.HasKey("CorrelationId");

                    b.ToTable("DeleteQuoteSagaData", "Saga");
                });

            modelBuilder.Entity("Bogsi.Quotable.Application.Sagas.UpdateQuoteSagaData", b =>
                {
                    b.Property<Guid>("CorrelationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("CacheUpdated")
                        .HasColumnType("boolean");

                    b.Property<string>("CurrentState")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PublicId")
                        .HasColumnType("uuid");

                    b.Property<bool>("QuoteUpdated")
                        .HasColumnType("boolean");

                    b.Property<uint>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.Property<bool>("SagaFailed")
                        .HasColumnType("boolean");

                    b.Property<bool>("SagaFinalized")
                        .HasColumnType("boolean");

                    b.HasKey("CorrelationId");

                    b.ToTable("UpdateQuoteSagaData", "Saga");
                });
#pragma warning restore 612, 618
        }
    }
}
